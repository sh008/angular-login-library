{"version":3,"file":"login-lib.mjs","sources":["../../../projects/login-lib/src/lib/login-lib.interface.ts","../../../projects/login-lib/src/lib/login-lib.component.ts","../../../projects/login-lib/src/lib/login-lib.component.html","../../../projects/login-lib/src/lib/login-lib.module.ts","../../../projects/login-lib/src/public-api.ts","../../../projects/login-lib/src/login-lib.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface LoginOptions {\r\n  header?: string;\r\n  usernameLabel?: string;\r\n  passwordLabel?: string;\r\n  submitLabel?: string;\r\n  footerLabel?: string;\r\n  logo?: string;\r\n  rememberMe?: boolean | null;\r\n  rememberMeLabel?: string;\r\n  usernameBindName: string;\r\n  passwordBindName: string;\r\n  responseTokenKey: string;\r\n}\r\n\r\nexport function mergeLoginOptions(opts: LoginOptions): LoginOptions {\r\n  return { ...defaultOptions, ...opts };\r\n}\r\n\r\nexport const defaultOptions: LoginOptions = {\r\n  header: '',\r\n  usernameLabel: 'نام کاربری',\r\n  passwordLabel: 'کلمه عبور',\r\n  submitLabel: 'ورود',\r\n  footerLabel: '',\r\n  logo: '',\r\n  rememberMe: true,\r\n  rememberMeLabel: 'من را به خاطر بسپار',\r\n  usernameBindName: '',\r\n  passwordBindName: '',\r\n  responseTokenKey: ''\r\n};\r\n\r\nexport interface ILoginRes {\r\n  success: boolean;\r\n  res: any;\r\n}\r\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  inject,\n} from '@angular/core';\nimport {\n  ILoginRes,\n  LoginOptions,\n  defaultOptions,\n  mergeLoginOptions,\n} from './login-lib.interface';\nimport { Observable } from 'rxjs';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nimport { SocialAuthService } from '@abacritt/angularx-social-login';\nimport { GoogleLoginProvider } from '@abacritt/angularx-social-login';\n@Component({\n  selector: 'lib-login-sh',\n  templateUrl: './login-lib.component.html',\n  styleUrls: ['./login-lib.component.css'],\n})\nexport class LoginLibComponent implements OnInit, OnChanges {\n\n  //create form\n  constructor(private fb: FormBuilder) {\n    this.form = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      rememberMe: [false],\n    });\n\n    this.loginRes = new EventEmitter();\n\n\n    //inject google login\n    inject(SocialAuthService);\n  }\n\n\n  //style input\n  @Input() options: LoginOptions = { ...defaultOptions };\n\n  //observer login api input\n  @Input('loginApi') $loginApi?: any;\n\n  //send login Api res\n  @Output('loginRes') loginRes: EventEmitter<ILoginRes>;\n\n  //form variables\n  submitSpinner: boolean = false;\n  form: FormGroup;\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.options = mergeLoginOptions(this.options);\n  }\n\n  submit() {\n    //check validation\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.submitSpinner = true;\n\n    //set send data\n    let data: any = {};\n    data[this.options.usernameBindName] = this.form.get('username')?.value;\n    data[this.options.passwordBindName] = this.form.get('username')?.value;\n\n    this.$loginApi(data)?.subscribe({\n      next: (res: any) => {\n        this.submitSpinner = false;\n        this.tokenHandler(res[this.options.responseTokenKey]);\n        this.loginRes.emit({\n          success: true,\n          res,\n        });\n      },\n      error: (err: any) => {\n        this.submitSpinner = false;\n        this.loginRes.emit({\n          success: false,\n          res: err,\n        });\n      },\n    });\n  }\n\n  tokenHandler(token: string) {\n    const storage = this.form.get('rememberMe')?.value\n      ? localStorage\n      : sessionStorage;\n    storage.setItem('token', token);\n  }\n\n}\n","<hgroup>\r\n  <h1>{{ options.header }}</h1>\r\n</hgroup>\r\n<form (ngSubmit)=\"submit()\" [formGroup]=\"form\" name=\"loginForm\">\r\n  <div class=\"group\">\r\n    <input class=\"text-box\" formControlName=\"username\" type=\"text\" /><span\r\n      class=\"highlight\"\r\n    ></span\r\n    ><span class=\"bar\"></span>\r\n    <label class=\"input\"\r\n      [ngClass]=\"{\r\n        'text-danger':\r\n          form.get('username')?.touched &&\r\n          form.get('username')?.hasError('required')\r\n      }\"\r\n      >{{ options.usernameLabel }}</label\r\n    >\r\n  </div>\r\n  <div class=\"group\">\r\n    <input class=\"text-box\" formControlName=\"password\" type=\"password\" /><span\r\n      class=\"highlight\"\r\n    ></span\r\n    ><span class=\"bar\"></span>\r\n    <label class=\"input\"\r\n      [ngClass]=\"{\r\n        'text-danger':\r\n          form.get('password')?.touched &&\r\n          form.get('password')?.hasError('required')\r\n      }\"\r\n      >{{ options.passwordLabel }}</label\r\n    >\r\n  </div>\r\n\r\n  <div *ngIf=\"options.rememberMe\" class=\"remember-holder\">\r\n    <label>{{options.rememberMeLabel}}</label>\r\n    <input type=\"checkbox\" formControlName=\"rememberMe\" />\r\n  </div>\r\n\r\n  <button type=\"submit\" class=\"button buttonBlue\" [disabled]=\"submitSpinner\">\r\n    {{ options.submitLabel }}\r\n  </button>\r\n</form>\r\n<!-- footer section -->\r\n<section>\r\n  <span *ngIf=\"options.logo\">\r\n    <img [src]=\"options.logo\" />\r\n  </span>\r\n  <p>\r\n    {{ options.footerLabel }}\r\n  </p>\r\n</section>\r\n\r\n<!-- end footer section -->\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { LoginLibComponent } from './login-lib.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginOptions } from './login-lib.interface';\nimport {\n  SocialLoginModule,\n  SocialAuthServiceConfig,\n} from '@abacritt/angularx-social-login';\nimport {\n  GoogleLoginProvider,\n} from '@abacritt/angularx-social-login';\n@NgModule({\n  declarations: [LoginLibComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, SocialLoginModule],\n  exports: [LoginLibComponent, CommonModule, FormsModule],\n})\nexport class LoginLibModule {\n  static forRoot(options: any): ModuleWithProviders<LoginLibModule> {\n    return {\n      ngModule: LoginLibModule,\n      providers: [\n        {\n          provide: 'SocialAuthServiceConfig',\n          useValue: {\n            autoLogin: false,\n            providers: [\n              {\n                id: GoogleLoginProvider.PROVIDER_ID,\n                provider: new GoogleLoginProvider(options.googleClientId || 'empty'),\n              },\n            ],\n            onError: (err) => {\n              console.error(err);\n            },\n          } as SocialAuthServiceConfig,\n        },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of login-lib\n */\n\nexport * from './lib/login-lib.component';\nexport * from './lib/login-lib.interface';\nexport * from './lib/login-lib.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}